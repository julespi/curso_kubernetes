version: "3.9"
services:

  mysql8:
    container_name: mysql8
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: msvc_usuarios
    volumes:
      - db-mysql:/var/lib/mysql
    restart: always
    networks:
      - spring

  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: msvc_cursos
    volumes:
      - db-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  msvc-usuarios:
    container_name: msvc-usuarios
    image: julespi/usuarios
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      DB_HOST: mysql8:3306
      DB_DATABASE: msvc_usuarios
      DB_USERNAME: root
      DB_PASSWORD: root
      CURSOS_URL: msvc-cursos:8002
    networks:
      - spring
    depends_on:
      - mysql8
    restart: always

  msvc-cursos:
    container_name: msvc-cursos
    image: julespi/cursos
    ports:
      - "8002:8002"
    environment:
      PORT: 8002
      DB_HOST: postgres14:5432
      DB_DATABASE: msvc_cursos
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      USUARIOS_URL: msvc-usuarios:8001
    networks:
      - spring
    depends_on:
      - postgres14
      - msvc-usuarios
    restart: always

volumes:
  db-mysql:
    name: db-mysql
  db-postgres:
    name: db-postgres

networks:
  spring:
    name: spring

#### levantar todo con docker compose
# - docker-compose up -d

#### baja y elimina los contenedores
# - docker-compose down

#### levanta y construye todas las iamgenes de forma forzada
# - docker-compose up --build -d

#### solo construye todas las iamgenes de forma forzada
# - docker-compose build